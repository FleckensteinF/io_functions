cmake_minimum_required(VERSION 2.8)

#project name
project(io_functions)

FIND_PACKAGE(Eigen3 REQUIRED)

SET(LIB_PREFIX ${PROJECT_NAME}_)
SET(${PROJECT_NAME}_LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib CACHE PATH "Output path for libraries")
SET(${PROJECT_NAME}_EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin CACHE PATH "Output path for executables")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${${PROJECT_NAME}_LIBRARY_OUTPUT_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${${PROJECT_NAME}_EXECUTABLE_OUTPUT_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${${PROJECT_NAME}_LIBRARY_OUTPUT_PATH})
SET(BUILD_SHARED_LIBS ON)

# activate warnings !!!
SET(${PROJECT_NAME}_C_FLAGS "${${PROJECT_NAME}_C_FLAGS} -Wall -W")
SET(${PROJECT_NAME}_CXX_FLAGS "${${PROJECT_NAME}_CXX_FLAGS} -Wall -W")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${${PROJECT_NAME}_C_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${${PROJECT_NAME}_CXX_FLAGS}")

# C++11 support
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
  MESSAGE("Found C++11 support")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  ADD_DEFINITIONS(-DCXX11_SUPPORT)
elseif(COMPILER_SUPPORTS_CXX0X)
  MESSAGE("Found C++0x support")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
  message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

# build and run tests
#enable_testing()

# Set up the top-level include directories
INCLUDE_DIRECTORIES(
  ${${PROJECT_NAME}_SOURCE_DIR}
  ${EIGEN3_INCLUDE_DIR}
)

#SET(LIB_PREFIX tools_)

ADD_LIBRARY(io_functions
  io_functions.h 
  io_functions.hpp
  io_functions.cpp
)

TARGET_LINK_LIBRARIES(io_functions   
  boost_system
  boost_filesystem)

SET_TARGET_PROPERTIES(io_functions PROPERTIES OUTPUT_NAME ${LIB_PREFIX}io_functions)

INSTALL(TARGETS io_functions
  RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
  LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
  ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
)

FILE(GLOB headers "${CMAKE_CURRENT_SOURCE_DIR}/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/*.hpp")
#INSTALL(FILES ${headers} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}/io_functions)
INSTALL(FILES ${headers} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME})